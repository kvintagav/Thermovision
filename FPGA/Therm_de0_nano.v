
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================
`include "define.v"

module Therm_de0_nano(
input 		          		CLOCK_50,
/*
//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR,
output		     [1:0]		DRAM_BA,
output		          		DRAM_CAS_N,
output		          		DRAM_CKE,
output		          		DRAM_CLK,
output		          		DRAM_CS_N,
inout 		    [15:0]		DRAM_DQ,
output		     [1:0]		DRAM_DQM,
output		          		DRAM_RAS_N,
output		          		DRAM_WE_N,
*/

//*******INOUT*BALOMETER/////////
output BL_OUT1,
output BL_OUT2,
output BL_OUT3,
output BL_OUT4,

input BL_IN1,
input BL_IN2,
input BL_IN3,

//******SPI*********//

input SPI_NSS,
input SPI_CLK,
output SPI_MISO,
input SPI_MOSI,

//output IRQ
//output [7:0]LED


//****ADC*****//
input  ADC_VIDEO1,
input  ADC_VIDEO2,
output ADC_CLOCK,
input  ADC_DCO,
input  ADC_FCO
);

wire CLK_140MHZ;
wire CLK_25MHZ;
wire CLK_20MHZ;
wire CLK_10MHZ;
wire CLK_6_6MHZ;
wire bl_type;
wire [9:0] int_time;

wire bl_mc;
wire bl_reset;
wire bl_int;
wire bl_serdata;
wire bl_datavalid;
wire bl_line1;
wire bl_error;
wire all_reset;

wire bl_syt;
wire bl_syl;
wire bl_syp;
wire bl_size;

wire bl_enable;
wire adc_enable;

wire [`ADC_WIDHT-1:0] adc_bufer_wire1;
wire [`ADC_WIDHT-1:0] adc_bufer_wire2;

PLL_CLK pll_clock(
.inclk0(CLOCK_50),
.c0(CLK_140MHZ),
.c1(CLK_25MHZ),
.c2(CLK_20MHZ),
.c3(CLK_10MHZ),
.c4(CLK_6_6MHZ)
);

adc_control adc_shift(
.CLK(CLOCK_50),
.DCO(ADC_DCO),
.FCO(ADC_FCO),
.ADC_IN1(ADC_VIDEO1),
.ADC_IN2(ADC_VIDEO2),
.ADC_OUT1(adc_bufer_wire1[`ADC_WIDHT-1:0]),
.ADC_OUT2(adc_bufer_wire2[`ADC_WIDHT-1:0])
);

bufer_line bufer_line1(
.CLK1(CLK_10MHZ),
.CLK2 (CLK_10MHZ),
.RESET(all_reset),
//.BUFER_CHANGE,
//.BUFER_IN_EN,
//.BUFER_OUT_EN,
.DATA_IN(adc_bufer_wire1[`ADC_WIDHT-1:0] )
//.DATA_OUT
);

control control_fpga(
.TYPE(bl_type),
.INT_TIME(int_time),
.RESET(all_reset),
.BL_ENABLE(bl_enable),
.ADC_ENABLE(adc_enable)
);

bal_640_control bol_640(

.CLK(CLK_10MHZ),
.RESET(all_reset),
.BL_ENABLE(bl_enable),
.INT_TIME(int_time),

.BL_MC (bl_mc),
.BL_RESET (bl_reset),
.BL_INT  (bl_int),
.BL_SERDATA (bl_serdata),
.BL_DATAVALID (bl_datavalid),
.BL_LINE1 (bl_line1),
.BL_ERROR (bl_error)

);


switch_bal switch_inout_bal(
.TYPE(bl_type),
.BL_OUT1 (BL_OUT1),
.BL_OUT2 (BL_OUT2),
.BL_OUT3 (BL_OUT3),
.BL_OUT4 (BL_OUT4),
.BL_IN1  (BL_IN1),
.BL_IN2  (BL_IN2),
.BL_IN3  (BL_IN3),

.BL_MC (bl_mc),
.BL_RESET (bl_reset),
.BL_INT  (bl_int),
.BL_SERDATA (bl_serdata),
.BL_DATAVALID (bl_datavalid),
.BL_LINE1 (bl_line1),
.BL_ERROR (bl_error)
/*
.BL_SYT(bl_syt),
.BL_SYP (bl_syp),
.BL_SYL (bl_syl),
.BL_SIZE (bl_size)
*/
);

assign ADC_CLOCK=CLK_10MHZ & adc_enable;
endmodule
